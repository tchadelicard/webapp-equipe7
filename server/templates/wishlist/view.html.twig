{% extends 'base.html.twig' %}

{% block title %} {{ wishlist.name }} {% endblock %}

{% block body %}
    <h1> {{ wishlist.name }}</h1>

    <button onclick="sortByPrice('asc')"> Trier par prix croissant</button>
    <button onclick="sortByPrice('desc')"> Trier par prix décroissant</button>

    <ul id="wishlist">
        {% for item in wishlist.items %}
            {% set isPurchased = item.purchase is not same as(null) %}
            <li class="{% if isPurchased %}grayed-out{% endif %}" 
                onmouseenter="showDetails(this)" 
                onmouseleave="hideDetails(this)">
                
                <h2>{{ item.title }}</h2>
                <p>{{ item.description }}</p>
                <p>Prix: {{ item.price }}€</p>
                <button onclick="openPurchaseLinks('{{item.url}}', 'wishlist/upload-proof')">Acheter</button>

                {% if isPurchased %}
                    <div class="purchase-details hidden">
                        <p>Acheté par : {{ item.purchase.buyer.firstName }} {{ item.purchase.buyer.lastName }}</p>
                        <p>Message : {{ item.purchase.congratulatoryText }}</p>
                    </div>
                {% endif %}
            </li>
        {% endfor %}
    </ul>

    <script>
        function openPurchaseLinks(purchaseUrl, proofUploadUrl) {
            window.open(purchaseUrl, '_blank');  // Ouvre la page d'achat
            window.open(proofUploadUrl, '_blank');  // Ouvre la page d'upload de preuve
        }

        function sortByPrice(order) {
            let list = document.getElementById('wishlist');
            let items = Array.from(list.children);

            items.sort((a, b) => {
                let priceA = parseFloat(a.querySelector('p:nth-of-type(2)').textContent.replace('Prix: ', '').replace('€', ''));
                let priceB = parseFloat(b.querySelector('p:nth-of-type(2)').textContent.replace('Prix: ', '').replace('€', ''));
                return order === 'asc' ? priceA - priceB : priceB - priceA;
            });

            list.innerHTML = '';
            items.forEach(item => list.appendChild(item));
        }

        function showDetails(element) {
            let details = element.querySelector('.purchase-details');
            if (details) {
                details.classList.remove('hidden');
            }
        }

        function hideDetails(element) {
            let details = element.querySelector('.purchase-details');
            if (details) {
                details.classList.add('hidden');
            }
        }
    </script>

    <style>
        body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif; /* Ajout d'une police de caractère pour une meilleure lisibilité */
}

h1 {
    margin-bottom: 50px; /* Espacement sous le titre */
}

button {
    margin: 20px 10px; /* Espacement des boutons */
}

ul#wishlist {
    padding: 5;
    list-style-type: none; /* Enlève les puces */
}

ul#wishlist li {
    padding: 10px;
    margin: 15px 0; 
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 8px;
}
        .grayed-out {
            color: gray;
        }
        .purchase-details {
            background-color: rgba(21, 247, 82, 0.73);
            padding: 5px;
            border-radius: 5px;
            margin-top: 5px;
        }
        .hidden {
            display: none;
        }
    </style>
{% endblock %}