{% extends 'base.html.twig' %}

{% block title %}{{ wishlist.name }}{% endblock %}

{% block body %}
    <div class="container mt-7">
        <h1 class="text-center mb-4">{{ wishlist.name }}</h1>

        {# Improved Sorting Buttons #}
        <div class="d-flex justify-content-center mb-4">
            <div class="btn-group" role="group" aria-label="Sorting options">
                <button class="btn btn-outline-primary" onclick="sortByPrice('asc')">Trier par prix croissant</button>
                <button class="btn btn-outline-primary" onclick="sortByPrice('desc')">Trier par prix décroissant</button>
            </div>
        </div>

        <ul id="wishlist" class="list-group">
            {% for item in wishlist.items %}
                {% set isPurchased = item.purchase is not same as(null) %}
                <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap {% if isPurchased %}grayed-out{% endif %}">

                    <div class="item-info w-75">
                        <h5 class="mb-1">{{ item.title }}</h5>
                        <p class="mb-1">{{ item.description }}</p>
                        <p class="mb-1"><strong>Prix:</strong> <span>{{ item.price }}€</span></p>
                    </div>

                    <div class="item-actions">
                        {% if isPurchased %}
                            {# Display the "Voir l'achat" button #}
                            <button class="btn btn-info" onclick="showPurchaseDetails('{{ item.purchase.buyer.firstName }}', '{{ item.purchase.buyer.lastName }}', '{{ item.purchase.congratulatoryText }}')">Voir l'achat</button>
                        {% else %}
                            {% set purchaseCreateUrl = url('purchase_create', {'itemId': item.id }) %}
                            {# Display the "Acheter" button #}
                            <button class="btn btn-success" onclick="openPurchaseLinks('{{ item.url }}', '{{ purchaseCreateUrl }}')">Acheter</button>
                        {% endif %}
                    </div>
                </li>
            {% else %}
                <li class="list-group-item text-center text-muted">
                    Aucun article dans cette wishlist pour l'instant.
                </li>
            {% endfor %}
        </ul>
    </div>

    {# Purchase Details Modal #}
    <div class="modal fade" id="purchaseModal" tabindex="-1" aria-labelledby="purchaseModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="purchaseModalLabel">Détails de l'achat</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Acheté par:</strong> <span id="purchaseBuyer"></span></p>
                    <p><strong>Message:</strong> <span id="purchaseMessage"></span></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function openPurchaseLinks(purchaseUrl, proofUploadUrl) {
            window.open(purchaseUrl, '_blank'); 
            window.open(proofUploadUrl, '_blank'); 
        }
        function sortByPrice(order) {
            let list = document.getElementById('wishlist');
            let items = Array.from(list.children);

            items.sort((a, b) => {
                let priceA = parseFloat(a.querySelector('.item-info p span').textContent.replace('€', ''));
                let priceB = parseFloat(b.querySelector('.item-info p span').textContent.replace('€', ''));
                return order === 'asc' ? priceA - priceB : priceB - priceA;
            });

            list.innerHTML = '';
            items.forEach(item => list.appendChild(item));
        }

        function showPurchaseDetails(firstName, lastName, message) {
            document.getElementById('purchaseBuyer').textContent = firstName + ' ' + lastName;
            document.getElementById('purchaseMessage').textContent = message;
            var purchaseModal = new bootstrap.Modal(document.getElementById('purchaseModal'));
            purchaseModal.show();
        }
    </script>

    <style>
        /* Enhanced list item spacing and styling */
        .list-group-item {
            margin-bottom: 15px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 12px;
            border: 1px solid #e0e0e0;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .list-group-item:hover {
            transform: scale(1.02);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .grayed-out {
            opacity: 0.7;
            color: gray;
        }

        /* Button styling */
        .btn-success, .btn-info {
            padding: 8px 16px;
            border-radius: 8px;
        }

        .btn-outline-primary {
            border-radius: 8px;
            margin: 0 5px;
        }

        .btn:hover, .btn:focus {
            opacity: 0.9;
        }

        /* Better spacing for the buttons */
        .btn-group .btn {
            min-width: 180px;
        }

        /* Modal styling */
        .modal-content {
            border-radius: 12px;
        }
    </style>
{% endblock %}