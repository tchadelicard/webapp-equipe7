{% extends 'base.html.twig' %}

{% block title %} {{ Wishlist.name }} {% endblock %}

{% block body %}
    <h1> {{ Wishlist.name }}</h1>

    <button onclick="sortByPrice('asc')"> Trier par prix croissant</button>
    <button onclick="sortByPrice('desc')"> Trier par prix décroissant</button>

    <ul id="wishlist">
        {% for item in wishlist.items %}
            {% set isPurchased = item.purchased is not same as('None') and item.purchased is not empty %}
            <li class="{% if isPurchased %}grayed-out{% endif %}" 
                onmouseenter="showDetails(this)" 
                onmouseleave="hideDetails(this)">
                
                <h2>{{ item.title }}</h2>
                <p>{{ item.description }}</p>
                <p>Prix: {{ item.price }}€</p>
                <button onclick="openPurchaseLinks('{{item.url}}', 'wishlist/upload-proof')">Acheter</button>

                {% if isPurchased %}
                    <div class="purchase-details hidden">
                        <p>Acheté par : {{ item.purchase.buyer }}</p>
                        <p>Message : {{ item.purchase.congratulatoryText }}</p>
                    </div>
                {% endif %}
            </li>
        {% endfor %}
    </ul>

    <script>
        function openPurchaseLinks(purchaseUrl, proofUploadUrl) {
            window.open(purchaseUrl, '_blank');  // Ouvre la page d'achat
            window.open(proofUploadUrl, '_blank');  // Ouvre la page d'upload de preuve
        }

        function sortByPrice(order) {
            let list = document.getElementById('wishlist');
            let items = Array.from(list.children);

            items.sort((a, b) => {
                let priceA = parseFloat(a.querySelector('p:nth-of-type(2)').textContent.replace('Prix: ', '').replace('€', ''));
                let priceB = parseFloat(b.querySelector('p:nth-of-type(2)').textContent.replace('Prix: ', '').replace('€', ''));
                return order === 'asc' ? priceA - priceB : priceB - priceA;
            });

            list.innerHTML = '';
            items.forEach(item => list.appendChild(item));
        }

        function showDetails(element) {
            let details = element.querySelector('.purchase-details');
            if (details) {
                details.classList.remove('hidden');
            }
        }

        function hideDetails(element) {
            let details = element.querySelector('.purchase-details');
            if (details) {
                details.classList.add('hidden');
            }
        }
    </script>

    <style>
        .grayed-out {
            color: gray;
        }
        .purchase-details {
            background-color: rgba(21, 247, 82, 0.73);
            padding: 5px;
            border-radius: 5px;
            margin-top: 5px;
        }
        .hidden {
            display: none;
        }
    </style>
{% endblock %}